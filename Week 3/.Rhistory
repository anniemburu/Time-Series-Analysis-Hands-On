library(stats)
library(tseries)
setwd("~/Desktop/TimeSeries/ASSIGNMENTS/Assignment 5")
# EXERCISE 2
data <- read.table(file = "HW5Pr2.dat", header = FALSE)
View(data)
# EXERCISE 2
data <- read.table(file = "HW5Pr2.dat", header = TRUE)
View(data)
attach(data)
xTS <- ts(data)
## Part A
plot(xTS, main = expression("Time Series"*X[t]))
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
#do test
kpss.test(xTS) #HO : TS is stationary = Fail to reject
library(tseries)
library(randtests)
#do test
kpss.test(xTS) #HO : TS is stationary = Fail to reject
adf.test(xTS) #H0 : TS is not stationary = Rejects
xTS <- ts(data)
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
#do test
kpss.test(xTS) #HO : TS is stationary = Fail to reject
setwd("~/Desktop/TimeSeries/Class Exercises/Week 10")
library(fracdiff)
library(tseries)
Nile <- read.table(file = "Nilemin.txt", header=TRUE)
xTS <- ts(Nile, start = c(622),
end = c(1284), frequency = 1)
plot(xTS, main = "Annual minimum water levels (in mm)")
xTS_lm <- lm(xTS~time(xTS))
abline(xTS_lm, col = 2)
yTS <- ts(xTS_lm$residuals)
plot(yTS, main = "Residuals of lm(Annual minimum water levels)")
yTS <- ts(xTS_lm$residuals)
plot(yTS, main = "Residuals of lm(Annual minimum water levels)")
kpss.test(yTS)    # H0 (=stationarity) is not rejected
adf.test(yTS)     # H0 (=process is integrated) is rejected
setwd("~/Desktop/TimeSeries/Class Exercises/Week 10")
Nile <- read.table(file = "Nilemin.txt", header=TRUE)
xTS <- ts(Nile, start = c(622),
end = c(1284), frequency = 1)
plot(xTS, main = "Annual minimum water levels (in mm)")
xTS_lm <- lm(xTS~time(xTS))
abline(xTS_lm, col = 2)
yTS <- ts(xTS_lm$residuals)
plot(yTS, main = "Residuals of lm(Annual minimum water levels)")
abline(a = 0, b = 0)
kpss.test(yTS)    # H0 (=stationarity) is not rejected
0.05 > 0.1
0.1 > 0.05
xTS_lm <- lm(xTS~time(xTS))
abline(xTS_lm, col = 2)
Nile <- read.table(file = "Nilemin.txt", header=TRUE)
xTS <- ts(Nile, start = c(622),
end = c(1284), frequency = 1)
plot(xTS, main = "Annual minimum water levels (in mm)")
xTS_lm <- lm(xTS~time(xTS))
abline(xTS_lm, col = 2)
yTS <- ts(xTS_lm$residuals)
plot(yTS, main = "Residuals of lm(Annual minimum water levels)")
xTS_lm <- lm(xTS~time(xTS))
abline(xTS_lm, col = 2)
yTS <- ts(xTS_lm$residuals)
plot(yTS, main = "Residuals of lm(Annual minimum water levels)")
abline(a = 0, b = 0)
kpss.test(yTS)    # H0 (=stationarity) is not rejected
adf.test(yTS)     # H0 (=process is integrated) is rejected
acf(yTS, main = "ACF of residuals of lm")
# Compare with PACF
pacf(yTS, main = "PACF of residuals of lm")
setwd("~/Desktop/TimeSeries/ASSIGNMENTS/Assignment 5")
library(tseries)
library(randtests)
# EXERCISE 2
data <- read.table(file = "HW5Pr2.dat", header = TRUE)
View(data)
#View(data)
attach(data)
xTS <- ts(x)
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
abline(a = 0, b = 0, col = 2)
?abline
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
abline(a = 2, b = 0, col = 2)
abline(a = 1, b = 0, col = 2)
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
abline(a = 1, b = 0, col = 2)
#do test
kpss.test(xTS) #HO : TS is stationary = Fail to reject
##Part B
acf(xTS)
pacf(xTS)
setwd("~/Desktop/TimeSeries/Class Exercises/Week 10")
library(fracdiff)
library(tseries)
library(randtests)
Nile <- read.table(file = "Nilemin.txt", header=TRUE)
xTS <- ts(Nile, start = c(622),
end = c(1284), frequency = 1)
plot(xTS, main = "Annual minimum water levels (in mm)")
xTS_lm <- lm(xTS~time(xTS))
abline(xTS_lm, col = 2)
yTS <- ts(xTS_lm$residuals)
plot(yTS, main = "Residuals of lm(Annual minimum water levels)")
abline(a = 0, b = 0)
kpss.test(yTS)    # H0 (=stationarity) is not rejected
adf.test(yTS)     # H0 (=process is integrated) is rejected
acf(yTS, main = "ACF of residuals of lm")
# Compare with PACF
pacf(yTS, main = "PACF of residuals of lm")
setwd("~/Desktop/TimeSeries/ASSIGNMENTS/Assignment 5")
library(tseries)
library(randtests)
library(fracdiff)
install.packages("fracdiff")
library(fracdiff)
library(tseries)
library(randtests)
library(fracdiff)
# EXERCISE 2
data <- read.table(file = "HW5Pr2.dat", header = TRUE)
#View(data)
attach(data)
xTS <- ts(x)
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
abline(a = 1, b = 0, col = 2)
#do test
kpss.test(xTS) #HO : TS is stationary = Fail to reject
##Part B
acf(xTS)
pacf(xTS)
ar(xTS)$order
?fracdiff
for (p in 0:1){
for (q in 0:1){
print(paste("FIRMA : "), c(p,d,q))
}
}
d = "d"
## Part A
plot(xTS, main = expression("Time Series "*X[t]))
for (p in 0:1){
for (q in 0:1){
print(paste("FIRMA : "), c(p,d,q))
}
}
## PART C
for (p in 0:1){
for (q in 0:1){
print(paste("FIRMA : "), c(p,q))
}
}
## PART C
for (p in 0:1){
for (q in 0:1){
print(c(p,0,q))
}
}
## PART C
for (p in 0:1){
for (q in 0:1){
print(c(p,q))
}
}
?fracdiff
for (q in 0:1){
print(c(p,q))
AIC(fracdiff(xTS, nar = p, nma = q))
}
}
f
## PART C
for (p in 0:1){
for (q in 0:1){
print(c(p,q))
}
}
AIC(fracdiff(xTS, nar = p, nma = q))
for (p in 0:1){
for (q in 0:1){
print(c(p,q))
print(AIC(fracdiff(xTS, nar = p, nma = q)))
}
}
for (p in 0:1){
for (q in 0:1){
print(c(p,q))
print(AIC(fracdiff(xTS, nar = p, nma = q)))
cat("\n")
}
}
#fit suitable model
xTS.firma <- fracdiff(xTS, nar = 1, nma = 0)
View(xTS.firma)
d <- xTS.firma$d
d
ar.estm <- xTS.firma$ar
ma.est <- xTS.firma$ma
ar.estm
ma.estm <- xTS.firma$ma
ma.estm
?fracdiff
View(xTS.firma)
Box.test(xTS.firma.residuals, type = "Box-Pierce", lag = 20)
#independence of residuals
xTS.firma.residuals <- xTS.firma$residuals
Box.test(xTS.firma.residuals, type = "Box-Pierce", lag = 20)
acf(xTS.firma.residuals, main = expression("Residuals of FIRMA model on "*X[t]))
acf(xTS.firma.residuals^2, main = expression("ACF of Residuals of FIRMA model on "*X[t]^2
acf(xTS.firma.residuals^2, main = expression("ACF of Residuals of FIRMA model on "*X[t]^2))
acf(xTS.firma.residuals^2,
main = expression("ACF of Residuals of FIRMA model on "*X^2[t]))
acf(xTS.firma.residuals^2,
main = expression("ACF of Residuals of FIRMA model on "*X[t]^2))
setwd("~/Desktop/TimeSeries/TimeSeriesAssignments/Week3")
# EXERCISE 1
## Part A
cbe <- read.table(file = "cbe.dat")
View(cbe)
# EXERCISE 1
## Part A
cbe <- read.table(file = "cbe.dat", header = TRUE)
View(cbe)
#View(cbe)
attach(cbe)
chocTS <- ts(choc, start = c(1958,1), end = c(1990,12), frequency = 12)
beerTS <- ts(beer, start = c(1958,1), end = c(1990,12), frequency = 12)
elecTS <- ts(elec, start = c(1958,1), end = c(1990,12), frequency = 12)
# EXERCISE 1
## Part A
cbe <- read.table(file = "cbe.dat", header = TRUE)
#View(cbe)
attach(cbe)
chocTS <- ts(choc, start = c(1958,1), end = c(1990,12), frequency = 12)
beerTS <- ts(beer, start = c(1958,1), end = c(1990,12), frequency = 12)
elecTS <- ts(elec, start = c(1958,1), end = c(1990,12), frequency = 12)
plot(cbind(chocTS, beerTS, elecTS), main = "Chocolate, Beer and Electricity
Time Series (1958-19)")
plot(cbind(chocTS, beerTS, elecTS), main = "Chocolate, Beer and Electricity
Time Series (1958-1958)")
chocTS.decompose <- decompose(chocTS, type = "multiplicative")
beerTS.decompose <- decompose(beerTS, type = "multiplicative")
elecTS.decompose <- decompose(elecTS, type = "multiplicative")
chocTS.trend <- chocTS.decompose$trend
beerTS.trend <- beerTS.decompose$trend
elecTS.trend <- elecTS.decompose$trend
mean(chocTS)
mean(chocTS.trend)
sd(chocTS)
sd(chocTS.trend)
?na.omit()
mean(chocTS)
mean(na.omit(chocTS.trend))
sd(chocTS)
sd(na.omit(chocTS.trend))
mean(chocTS)
mean(na.omit(chocTS.trend))
sd(chocTS)
sd(na.omit(chocTS.trend))
mean(beerTS)
mean(na.omit(beerTS.trend))
sd(beerTS)
sd(na.omit(beerTS.trend))
mean(elecTS)
mean(na.omit(elecTS.trend))
sd(elecTS)
sd(na.omit(elecTS.trend))
mean(chocTS)
mean(chocTS.trend, na.rm = TRUE)
sd(chocTS)
sd(chocTS.trend, na.rm = TRUE)
# EXERCISE 1
cbe <- read.table(file = "cbe.dat", header = TRUE)
#View(cbe)
attach(cbe)
chocTS <- ts(choc, start = c(1958,1), end = c(1990,12), frequency = 12)
beerTS <- ts(beer, start = c(1958,1), end = c(1990,12), frequency = 12)
elecTS <- ts(elec, start = c(1958,1), end = c(1990,12), frequency = 12)
plot(cbind(chocTS, beerTS, elecTS), main = "Chocolate, Beer and Electricity
Time Series (1958-1958)")
## Part A
chocTS.decompose <- decompose(chocTS, type = "multiplicative")
beerTS.decompose <- decompose(beerTS, type = "multiplicative")
elecTS.decompose <- decompose(elecTS, type = "multiplicative")
#trends
chocTS.trend <- chocTS.decompose$trend
beerTS.trend <- beerTS.decompose$trend
elecTS.trend <- elecTS.decompose$trend
## Part B
#Chocolate
mean(chocTS)
mean(chocTS.trend, na.rm = TRUE)
sd(chocTS)
sd(chocTS.trend, na.rm = TRUE)
#Beer
mean(beerTS)
mean(beerTS.trend, na.rm = TRUE)
sd(beerTS)
sd(beerTS.trend, na.rm = TRUE)
#Electricity
mean(elecTS)
mean(na.omit(elecTS.trend))
sd(elecTS)
sd(na.omit(elecTS.trend))
setwd("~/Desktop/TimeSeries/Class Exercises/Week 3")
####### ~~~ EXERCISE 1 ~~~ #######
# Part a)
#read data
cbe <- read.table(file = "cbe.dat", header=TRUE)
View(cbe)
attach(cbe)
#convert to time series
chocoTS <-  ts(choc, start = c(1958,1), end = c(1990,12), frequency = 12)
beerTS <-  ts(beer, start = c(1958,1), end = c(1990,12), frequency = 12)
elecTS <- ts(elec, start = c(1958,1), end = c(1990,12), frequency = 12)
#plot the time series
plot(cbind(chocoTS, beerTS, elecTS),
main = "Monthly Time Series for Chocolate, Beer and Electricity")
#decompose using multiplicative
chocoTS_trend <- decompose(chocoTS, type = "multiplicative")$trend
beerTS_trend <- decompose(beerTS, type = "multiplicative")$trend
elecTS_trend <- decompose(elecTS, type = "multiplicative")$trend
#Remove trend
chocoNTS <- chocoTS - chocoTS_trend
beerNTS <- beerTS - beerTS_trend
elecNTS <- elecTS - elecTS_trend
plot(elecNTS)
#Plot Results
plot(cbind(chocoNTS, beerNTS, elecNTS),
main = "Monthly Time Series Without Trend for Chocolate,
Beer and Electricity")
chocoTS_mean <- mean(chocoTS, na.rm = TRUE)
chocoNTS_mean <- mean(na.omit(chocoNTS))
chocoTS_mean
chocoNTS_mean
setwd("~/Desktop/TimeSeries/TimeSeriesAssignments/Week3")
# EXERCISE 1
cbe <- read.table(file = "cbe.dat", header = TRUE)
#View(cbe)
attach(cbe)
chocTS <- ts(choc, start = c(1958,1), end = c(1990,12), frequency = 12)
beerTS <- ts(beer, start = c(1958,1), end = c(1990,12), frequency = 12)
elecTS <- ts(elec, start = c(1958,1), end = c(1990,12), frequency = 12)
plot(cbind(chocTS, beerTS, elecTS), main = "Chocolate, Beer and Electricity
Time Series (1958-1958)")
## Part A
chocTS.decompose <- decompose(chocTS, type = "multiplicative")
beerTS.decompose <- decompose(beerTS, type = "multiplicative")
elecTS.decompose <- decompose(elecTS, type = "multiplicative")
chocTS.z <- chocTS - chocTS.decompose$trend
beerTS.z <- beerTS - beerTS.decompose$trend
elecTS.z <- elecTS - elecTS.decompose$trend
mean(chocTS)
mean(chocTS.z, na.rm = TRUE)
sd(chocTS)
sd(chocTS.z, na.rm = TRUE)
mean(beerTS)
mean(beerTS.z, na.rm = TRUE)
sd(beerTS)
sd(beerTS.z, na.rm = TRUE)
mean(elecTS)
mean(na.omit(elecTS.z))
sd(elecTS)
sd(na.omit(elecTS.z))
chocTS.random <- chocTS.decompose$random
plot(chocTS.random, main = " Random Component for Chocolate")
beerTS.random <- beerTS.decompose$random
plot(beerTS.random, main = " Random Component for Beer")
elecTS.random <- elecTS.decompose$random
plot(beerTS.random, main = " Random Component for Electricity")
chocTS.random <- chocTS.decompose$random
plot(chocTS.random, main = " Random Component for Chocolate")
beerTS.random <- beerTS.decompose$random
plot(beerTS.random, main = " Random Component for Beer")
elecTS.random <- elecTS.decompose$random
plot(elecTS.random, main = " Random Component for Electricity")
mean(chocTS.random, na.rm = TRUE)
sd(chocTS.random, na.rm = TRUE)
mean(beerTS.random, na.rm = TRUE)
sd(beerTS.random, na.rm = TRUE)
mean(elecTS.random, na.rm = TRUE)
sd(elecTS.random, na.rm = TRUE)
mean(chocTS.random, na.rm = TRUE)
sd(chocTS.random, na.rm = TRUE)
mean(beerTS.random, na.rm = TRUE)
sd(beerTS.random, na.rm = TRUE)
mean(elecTS.random, na.rm = TRUE)
sd(elecTS.random, na.rm = TRUE)
acf(chocTS.random, main = "ACF Chocolate TS")
## Part E
acf(na.omit(chocTS.random), main = "ACF Chocolate TS")
acf(chocTS, main = "ACF Chocolate TS")
acf(beerTS, main = "ACF Beer TS")
acf(elecTS, main = "ACF Electricity")
acf(na.omit(chocTS.z), main = "ACF for Chocolate Without Trend")
acf(na.omit(beerTS.z), main = "ACF for Beer Without Trend")
acf(na.omit(elecTS.z), main = "ACF for Electricity Without Trend")
acf(chocTS.random, main = "ACF for Random Component Chocolate")
acf(beerTS.random, main = "ACF for Random Component Beer")
noiseTS <- function(variance){
set.seed(5)
noise <- rnorm(1000, mean = 0, sd = sqrt(variance))
noiseTS <- ts(noise)
}
plot(cbind(noiseTS(1), noiseTS(2), noiseTS(3)), main =  "Gaussian Noise with Variance as 1,2 and 3")
plot(cbind(noiseTS(10), noiseTS(20), noiseTS(30)), main =  "Gaussian Noise with Variance as 1,2 and 3")
noiseTS <- function(variance){
set.seed(5)
noise <- rnorm(1000, mean = 0, sd = variance)
noiseTS <- ts(noise)
}
plot(cbind(noiseTS(10), noiseTS(20), noiseTS(30)), main =  "Gaussian Noise with Variance as 1,2 and 3")
noiseTS <- function(variance){
set.seed(5)
noise <- rnorm(1000, mean = 0, sd = sqrt(variance))
noiseTS <- ts(noise)
}
plot(cbind(noiseTS(10), noiseTS(20), noiseTS(30)), main =  "Gaussian Noise with Variance as 1,2 and 3")
